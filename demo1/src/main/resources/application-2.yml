# 1 分库，分表（均匀分布）。
spring:
  shardingsphere:
    datasource:
      ds-0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/jdbcstudy1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&useTimezone=true
        username: root
        password: 123456
      ds-1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3307/jdbcstudy2?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&useTimezone=true
        username: root
        password: 123456
      names: ds-0,ds-1
    mode:
      overwrite: true
      repository:
        type: File
      type: Standalone
    rules:
      sharding:
        binding-tables:
          - user
        # broadcast-tables:
        default-database-strategy:
          standard:
            sharding-algorithm-name: database-inline
            sharding-column: id
        key-generators:
          snowflake:
            type: SNOWFLAKE
        sharding-algorithms:
          database-inline:
            props:
              algorithm-expression: ds-$->{id % 2}
            type: INLINE
          user-inline:
            props:
              algorithm-expression: user_$->{id % 10}
            type: INLINE
        tables:
          user:
            actual-data-nodes: ds-$->{0..1}.user_$->{0..9}
            key-generate-strategy:
              column: id
              key-generator-name: snowflake
            table-strategy:
              standard:
                sharding-algorithm-name: user-inline
                sharding-column: id

